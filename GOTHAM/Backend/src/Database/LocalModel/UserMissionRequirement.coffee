
GothamObject = require './GothamObject.coffee'

###*
# UserMissionRequirement Model, Contains all the requirement specificly made for a User's Mission. Generated by Paul's Generator.
# @class UserMissionRequirement
# @constructor
# @param {Sequelize.Model} model
# @required
# @extends GothamObject
# @submodule Backend.LocalDatabase
###
class UserMissionRequirement extends GothamObject

  constructor: (model) ->
    super(model)

  ###*
  # Get the UserMission object for this Requirement
  # @method getUserMission
  # @return {UserMission}
  ###
  getUserMission: ->
    if not @UserMission
      db_userMission = Gotham.LocalDatabase.table("UserMission")
      @UserMission = db_userMission.findOne({id: @user_mission})
    return @UserMission

  ###*
  # Get the MissionRequirement for this UserMissionRequirement
  # @method getMissionRequirement
  # @return {MissionRequirement}
  ###
  getMissionRequirement: ->
    if not @MissionRequirement
      db_missionRequirement = Gotham.LocalDatabase.table("MissionRequirement")
      @MissionRequirement = db_missionRequirement.findOne({id: @mission_requirement})
    return @MissionRequirement



###*
# The id of the user_mission_requirement
# @property {Integer} id
###

###*
# The user_mission of the user_mission_requirement
# @property {Integer} user_mission
###
###*
# The mission_requirement of the user_mission_requirement
# @property {Integer} mission_requirement
###
###*
# The emit_value of the user_mission_requirement
# @property {String} emit_value
###
###*
# The emit_input of the user_mission_requirement
# @property {String} emit_input
###
###*
# The current of the user_mission_requirement
# @property {String} current
###
###*
# The expected of the user_mission_requirement
# @property {String} expected
###

module.exports = UserMissionRequirement

